---
- name: Install NUT Server and Client
  apt:
    state: present
    update_cache: yes
    name: "{{ item }}"
  loop: "{{ nut_packages }}"

- name: Check for nut-scanner
  shell: "which nut-scanner"
  become: false
  register: nut_scanner
  changed_when: false
  failed_when: nut_scanner.rc != 0

- name: Checking for Connected UPS devices
  shell: "{{ nut_scanner.stdout }} -U -q | grep -c 'nutdev'"
  become: true
  register: ups_device_count
  changed_when: false
  failed_when: ups_device_count == 2

- debug:
    msg: "Found {{ ups_device_count.stdout }} UPS Devices"

- name: Copy over ups.conf
  template:
    src: "../templates/ups.conf.j2"
    dest: "/etc/nut/ups.conf"
    owner: "{{ nut_user }}"
    group: "{{ nut_group }}"
    mode: "0640"

- name: Add UPS configuration to {{ ups_conf_tmp_path }}
  shell: |
    {{ nut_scanner.stdout }} -U -q > {{ ups_conf_tmp_path }}
    sed -i -E "s/nutdev([0-9])/{{ ups_device_name_prefix }}-\1/g" {{ ups_conf_tmp_path }}
    echo "" >> /etc/nut/ups.conf
    cat {{ ups_conf_tmp_path }} >> /etc/nut/ups.conf
  become: true
  register: ups_conf_add

- name: Get Parsable UPS Output
  shell: |
    {{ nut_scanner.stdout }} -U -q -P | awk -F ',' '{ print "{\"" $3 ",\"" $4 "}" }' | sed 's/=/": /g'
  become: true
  register: ups_device_parsable
  changed_when: false
  failed_when: ups_device_parsable == 2

# Uncomment for debugging
#- debug:
#    msg: "{{ ups_device_parsable.stdout_lines }}"

- name: Copy over udev-rule
  template:
    src: "../templates/99-nut-ups.rules.j2"
    dest: "/etc/udev/rules.d/99-nut-ups.rules"
    owner: "root"
    group: "root"
    mode: "0644"
  vars:
    ups_devices: "{{ ups_device_parsable.stdout_lines|list }}"

- name: Copy over nut.conf
  template:
    src: "../templates/nut.conf.j2"
    dest: "/etc/nut/nut.conf"
    owner: "{{ nut_user }}"
    group: "{{ nut_group }}"
    mode: "0640"

- name: Copy over upsd.users
  template:
    src: "../templates/upsd.users.j2"
    dest: "/etc/nut/upsd.users"
    owner: "{{ nut_user }}"
    group: "{{ nut_group }}"
    mode: "0640"

- name: Copy over upsd.conf
  template:
    src: "../templates/upsd.conf.j2"
    dest: "/etc/nut/upsd.conf"
    owner: "{{ nut_user }}"
    group: "{{ nut_group }}"
    mode: "0640"

- name: Copy over upsmon.conf
  template:
    src: "../templates/upsmon.conf.j2"
    dest: "/etc/nut/upsmon.conf"
    owner: "{{ nut_user }}"
    group: "{{ nut_group }}"
    mode: "0640"
  vars:
    device_count: "{{ ups_device_count.stdout }}"

- name: Copy over upssched.conf
  template:
    src: "../templates/upssched.conf.j2"
    dest: "/etc/nut/upssched.conf"
    owner: "{{ nut_user }}"
    group: "{{ nut_group }}"
    mode: "0640"

- name: Copy over upssched-cmd
  template:
    src: "../templates/upssched-cmd.sh.j2"
    dest: "{{ upssched_script_path }}"
    owner: "root"
    group: "root"
    mode: "0755"

- name: Create log directory
  file:
    path: "{{ nut_log_dir }}"
    owner: "{{ nut_user }}"
    group: "{{ nut_group }}"
    state: "directory"

- name: Restarting nut driver
  shell: |
    /usr/sbin/upsdrvctl stop
    /usr/sbin/upsdrvctl start
  become: true
  register: upsdrvctl_restart
  failed_when: upsdrvctl_restart == 2

- name: Enable and start nut-server
  systemd:
    state: restarted
    name: nut-server
    enabled: true

- name: Enable and start nut-client
  systemd:
    state: restarted
    name: nut-client
    enabled: true

- name: Enable and start nut-monitor
  systemd:
    state: restarted
    name: nut-monitor
    enabled: true
